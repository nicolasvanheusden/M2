// MongoDB Playground
// Use Ctrl+Space inside a snippet or a string literal to trigger completions.

const database = 'movie';
const movieCollection = 'movieCollection';
const personCollection = 'personCollection';
const genreCollection = 'genreCollection';
const actorCollection = 'actorCollection';
const directorCollection = 'directorCollection';


// Create a new database.
use(database);

db.genreCollection.drop();
db.movieCollection.drop();
db.personCollection.drop();
db.actorCollection.drop();
db.directorCollection.drop();

db.createCollection(genreCollection, {
  validator: {$jsonSchema: {
    bsonType: "object",
    required: ["idGenre", "name"],
    properties: {
      idGenre: {
        bsonType: "number",
        description: "must be an integer and is required"
      },
      label: {
        bsonType: "string",
        description: "must be a string and is required"
      }
    }  
  }}
});

db.createCollection(personCollection, {
  validator: {$jsonSchema: {
    bsonType: "object",
    required: ["idPerson", "firstName", "Lastname", "birthDate", "isA"],
    properties: {
      idPerson: {
        bsonType: "number",
        description: "must be an integer and is required"
      },
      firstName: {
        bsonType: "string",
        description: "must be a string and is required"
      },
      lastName: {
        bsonType: "string",
        description: "must be a string and is required"
      },
      birthDate: {
        bsonType: "date",
        description: "must be a date and is required"
      },
    }  
  }}
});


db.createCollection(actorCollection, {
    validator: {$jsonSchema: {
        bsonType: "object",
        required: ["idPerson", "idActor"],
        properties: {
            idPerson: {
                bsonType: "number",
                description: "must be an integer and is required"
            },
            idActor: {
                bsonType: "number",
                description: "must be an integer and is required"
            },
            role: {
                bsonType: "string",
                description: "must be a string"
            },
            movies: {
                bsonType: "array",
                description: "must be an array of movie",
                items: {
                    bsonType: "object",
                    required: ["movieId", "title"],
                    properties: {
                        movieId: {
                            bsonType: "number",
                            description: "must be an integer and is required"
                        },
                        title: {
                            bsonType: "string",
                            description: "must be a string and is required"
                        }
                    }
                }
            }
        }
    }}
});

db.createCollection(directorCollection, {
    validator: {$jsonSchema: {
     bsonType: "object",
     required: ["idPerson", "idDirector"],
     properties: {
        idPerson: {
            bsonType: "number",
            description: "must be an integer and is required"
        },
        idDirector: {
            bsonType: "number",
            description: "must be an integer and is required"
        },
     }   
    }}
});


// Create a new collection.
db.createCollection(movieCollection, {
  validator: {$jsonSchema: {
    bsonType: "object",
    required: ["idFilm", "title", "year", "country", "summary", "genre", "director", "actors"],
    properties: {
      idFilm: {
        bsonType: "number",
        description: "must be an integer and is required"
      },
      title: {
        bsonType: "string",
        description: "must be a string and is required"
      },
      year: {
        bsonType: "number",
        description: "must be a date and is required"
      },
      country: {
        bsonType: "string",
        description: "must be a string and is required"
      },
      summary: {
        bsonType: "string",
        description: "must be a string and is required"
      },
      genre: {
        bsonType: "number",
        description: "must be a genreId and is required",
      },
      director: {
        bsonType: "number",
        description: "must be a personId and is required"
      },
      actors: {
        bsonType: "array",
        description: "must be an array of Actor and is required",
        items: {
          bsonType: "object",
          required: ["actorId", "name"],
          properties: {
            actorId: {
                bsonType: "number",
                description: "must be an integer and is required"
            },
            name: {
                bsonType: "string",
                description: "must be a string and is required"
            }
          }
        }
      },
    }  
  }}
});


// insert data